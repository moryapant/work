from flask import Flask, render_template
import subprocess
import socket
import time
from threading import Thread

app = Flask(__name__)

# List to store status entries
status_entries = []

def check_service_status():
    while True:
        # Run the updated system command to check service status
        try:
            result = subprocess.run(['/etc/init/gedconnector', 'status'], capture_output=True, text=True)
            # Check if the output contains 'running'
            if 'running' in result.stdout.lower():
                status = 'Running'
            else:
                status = 'Not Running'
        except Exception as e:
            status = f"Error checking status: {e}"

        # Get the hostname
        hostname = socket.gethostname()

        # Get the current time
        current_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())

        # Append the status to the entries list
        status_entries.append(f"{current_time} - {hostname} - {status}")

        # Wait for 5 minutes before checking again
        time.sleep(300)

@app.route('/')
def index():
    return render_template('index.html', entries=status_entries)

if __name__ == '__main__':
    # Start the background thread
    thread = Thread(target=check_service_status)
    thread.daemon = True
    thread.start()

    # Run the Flask application
    app.run(debug=True)